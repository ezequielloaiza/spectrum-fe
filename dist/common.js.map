{"version":3,"sources":["webpack:///./src/app/shared/enum/role.enum.ts","webpack:///./src/app/shared/enum/status-invoice-client.enum.ts","webpack:///./src/app/shared/services/products/product.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA,IAAY,IAIX;AAJD,WAAY,IAAI;IACd,mDAAkB;IAClB,mCAAU;IACV,+BAAQ;AACV,CAAC,EAJW,IAAI,KAAJ,IAAI,QAIf;;;;;;;;;;;;;ACJD;AAAA;AAAA,IAAY,mBAKT;AALH,WAAY,mBAAmB;IAC3B,mEAAW;IACX,uEAAa;IACb,6DAAQ;IACR,mEAAW;AACb,CAAC,EALS,mBAAmB,KAAnB,mBAAmB,QAK5B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLwC;AACO;AAEiB;AAKnE;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,iCAAQ,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC,CAAC;IAChE,CAAC;IAEM,gCAAO,GAAd,UAAe,OAAO;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,iBAAiB,EAAE,OAAO,CAAC,CAAC;IACxE,CAAC;IAGM,wCAAe,GAAtB,UAAuB,UAAU;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,0BAA0B,GAAG,UAAU,CAAC,CAAC;IACrF,CAAC;IAEM,kCAAS,GAAhB,UAAiB,IAAI;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,oBAAoB,GAAG,IAAI,EAAE;YACrE,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAEM,kCAAS,GAAhB,UAAiB,MAAM,EAAE,SAAS;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,oBAAoB,GAAG,MAAM,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC;IAC7F,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,UAAU;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,2BAA2B,GAAG,UAAU,EAAE;YACpF,YAAY,EAAE,MAAM;SACnB,CAAC,CAAC;IACL,CAAC;IAEM,+CAAsB,GAA7B,UAA8B,UAAU;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,GAAG,iCAAiC,GAAG,UAAU,EAAE;YACxF,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IArCU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,cAAc,CAsC1B;IAAD,qBAAC;CAAA;AAtC0B","file":"common.js","sourcesContent":["export enum Role {\n  Administrative = 1,\n  Seller = 2,\n  User = 3\n}\n","export enum StatusInvoiceClient {\n    Pending = 0,\n    Part_Paid = 1,\n    Paid = 2,\n    Overdue = 3\n  }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  public findAll$(): Observable<any> {\n    return this.http.get(environment.apiUrl + 'products/findAll');\n  }\n\n  public update$(product): Observable<any> {\n    return this.http.put(environment.apiUrl + 'products/update', product);\n  }\n\n\n  public findBySupplier$(idSupplier): Observable<any> {\n    return this.http.get(environment.apiUrl + 'products/findBySupplier/' + idSupplier);\n  }\n\n  public download$(name): Observable<any> {\n    return this.http.get(environment.apiUrl + 'products/download/' + name, {\n      responseType: 'blob'\n    });\n  }\n\n  public getQuote$(idUser, idProduct): Observable<any> {\n    return this.http.get(environment.apiUrl + 'products/getQuote/' + idUser + '/' + idProduct);\n  }\n\n  public downloadProducts$(idSupplier): Observable<any> {\n    return this.http.get(environment.apiUrl + 'products/downloadProduct/' + idSupplier, {\n    responseType: 'blob'\n    });\n  }\n\n  public reportAllOrBySupplier$(idSupplier): Observable<any> {\n    return this.http.get(environment.apiUrl + 'products/reportAllOrBySupplier/' + idSupplier, {\n      responseType: 'blob'\n    });\n  }\n}\n"],"sourceRoot":""}